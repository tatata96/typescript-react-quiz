{"version":3,"sources":["API.ts","utils.ts","Images/back.jpg","App.styles.ts","components/QuestionCard.styles.ts","components/QuestionCard.tsx","App.tsx","index.tsx"],"names":["Difficulty","fetchQuizQuestions","amount","difficulty","a","endpoint","fetch","json","data","console","log","results","map","question","answers","array","incorrect_answers","correct_answer","sort","Math","random","GlobalQuizStyle","createGlobalStyle","BGImage","Wrapper","styled","div","ButtonWrapper","correct","userClicked","QuestionCard","callback","userAnswer","questionNum","totalQuestions","className","dangerouslySetInnerHTML","__html","answer","correctAnswer","disabled","value","onClick","App","useState","loading","setLoading","questions","setQuestions","questionNumber","setQuestionNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","error","setError","startTrivia","EASY","newQuestions","length","undefined","e","currentTarget","prev","answerObject","TOTAL_QUESTIONS","nextQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a1789de.chunk.js","sourcesContent":["import {shuffleArray} from \"./utils\"\r\n\r\nexport type Question={\r\n\r\n    category:string;\r\n    correct_answer:string;\r\n    difficulty:string;\r\n    incorrect_answers:string[];\r\n    question:string;\r\n    type:string;\r\n\r\n\r\n}\r\n\r\nexport type QuestionState=Question &{answers:string[]}//use Question ttype and add anwers to it\r\n\r\nexport enum Difficulty{\r\n\r\n    EASY=\"easy\",\r\n    MEDIUM=\"medium\",\r\n    HARD=\"hard\",\r\n\r\n}\r\n\r\nexport const fetchQuizQuestions =async (amount:number,difficulty: Difficulty)=>{\r\n\r\n    const endpoint=`https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data =  (await (await fetch(endpoint)).json());\r\nconsole.log(data);\r\n\r\nreturn data.results.map((question:Question)=>({\r\n    ...question, \r\n    answers:shuffleArray([ ...question.incorrect_answers,question.correct_answer]),\r\n}));\r\n\r\n\r\n};","export const shuffleArray=( array:any[])=>[\r\n    ...array\r\n].sort(()=>Math.random()-0.5);","export default __webpack_public_path__ + \"static/media/back.a5890da4.jpg\";","import styled,{createGlobalStyle} from 'styled-components';\r\nimport BGImage from './Images/back.jpg';\r\n\r\n\r\nexport const GlobalQuizStyle= createGlobalStyle `\r\nhtml{\r\n    height: 100%;\r\n}\r\n\r\nbody{\r\nbackground: url(${BGImage}) no-repeat center center fixed; \r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  background-size: cover;\r\nmargin:0;\r\npadding: 0 20px;\r\ndisplay:flex ;\r\njustify-content: center;\r\n\r\n}\r\n\r\n*{\r\n\r\n    box-sizing: border-box;\r\n    font-family: 'Courier New', Courier, monospace;\r\n}\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nmargin-top: 20vh;\r\n\r\n\r\n>\r\n\r\n.score{\r\n    color:white;\r\n    font-size: 2rem;\r\n    margin:0;\r\n\r\n}\r\n.title{\r\n    font-family: 'Courier New', Courier, monospace;\r\n   color:wheat;\r\n    font-size:30px;\r\n    text-align:left;\r\nfloat:left;\r\n}\r\n\r\n.start,.next{\r\n\r\n    cursor:pointer;\r\n    background: yellowgreen;\r\nborder:2px solid yellowgreen;\r\nbox-shadow:0px 5 px 10px rgba(0,0,0,0.25);\r\nborder-radius:10px;\r\nheight:40px;\r\nmargin:20px 0;\r\npadding: 0 40px;\r\n}\r\n.start{\r\n    max-width: 200px;\r\n}\r\n\r\n.loader {\r\n  border: 16px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 16px solid #3498db;\r\n  width: 120px;\r\n  height: 120px;\r\n  -webkit-animation: spin 2s linear infinite; /* Safari */\r\n  animation: spin 2s linear infinite;\r\n  margin-top:60%;\r\n}\r\n\r\n\r\n@-webkit-keyframes spin {\r\n  0% { -webkit-transform: rotate(0deg); }\r\n  100% { -webkit-transform: rotate(360deg); }\r\n}\r\n\r\n@keyframes spin {\r\n  0% { transform: rotate(0deg); }\r\n  100% { transform: rotate(360deg); }\r\n}\r\n.error-div{\r\n    width:400px;\r\n    background-color: #d0242496;\r\n        text-align:center;\r\n    font-size: 50px;\r\n    margin-top:20%;\r\n    color:white;\r\n    border: 2px solid #cc6262;\r\n    \r\n}\r\n`\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper =styled.div ` \r\npadding: 2%;\r\n\r\n    background-color:#f0ffffb8;\r\nborder-radius: 10px;\r\nborder:20px;\r\nbox-shadow: 0px 5px 10px rgba(0,0,0,0.25);\r\ntext-align: center;\r\n\r\np{\r\n    font-size:1rem;\r\n\r\n}\r\n\r\n`\r\n\r\n//styled component with props\r\ntype ButtonWrapperProps={\r\n    correct:boolean,\r\n    userClicked:boolean,\r\n}\r\nexport const ButtonWrapper =styled.div <ButtonWrapperProps>` \r\n\r\ntransition:all 0.3s ease;\r\n:hover{\r\n    opacity:0.4;\r\n}\r\n\r\nbutton{\r\n    cursor:pointer;\r\n    user-select:none;\r\n    font-size:0.8rem;\r\n    width:100%auto;\r\n    height:40px;\r\n    margin:5px 0;\r\n    background: ${({ correct, userClicked }) =>\r\n      correct\r\n        ?'#61c4c0'\r\n        : !correct && userClicked\r\n        ? '#dd291c'//wrong answer\r\n        : '#767bff'};\r\n   \r\n    color: #fff;\r\n    border: none;\r\n    border-radius: 7px;\r\n    width: 50%;\r\n\r\n\r\n};\r\n\r\n\r\n\r\n`","import React from \"react\";\r\nimport {AnswerObject} from \"../App\";\r\nimport {Wrapper,ButtonWrapper} from './QuestionCard.styles'\r\n\r\ntype Props = {\r\n  question: string;\r\n  answers: string[];\r\n  callback: (e: React.MouseEvent<HTMLButtonElement>) =>void;\r\n  userAnswer: AnswerObject | undefined;\r\n  questionNum: number;\r\n  totalQuestions: number;\r\n};\r\n\r\n//React.FC () specifies functional component\r\nconst QuestionCard: React.FC<Props> = ({\r\n  question,\r\n  answers,\r\n  callback,\r\n  userAnswer,\r\n  questionNum,\r\n  totalQuestions,\r\n}) => (\r\n  <Wrapper>\r\n    <p className=\"number\">\r\n      Question: {questionNum} / {totalQuestions}\r\n    </p>\r\n    <p dangerouslySetInnerHTML={{ __html: question }}></p>\r\n    <div>\r\n      {answers.map((answer) => (\r\n        <ButtonWrapper \r\n        correct={userAnswer?.correctAnswer === answer}\r\n        userClicked={userAnswer?.answer === answer}\r\n        key={answer}>\r\n          {/**  !!value -> converts to booelan*/}\r\n          <button disabled={!!userAnswer} value={answer}onClick={callback}> <span dangerouslySetInnerHTML={{ __html: answer }}/></button>\r\n         \r\n        </ButtonWrapper>\r\n      ))}\r\n    </div>\r\n  </Wrapper>\r\n);\r\n\r\nexport default QuestionCard;\r\n","import React ,{useState}from \"react\";\nimport {fetchQuizQuestions} from \"./API\";\nimport {Difficulty,QuestionState} from \"./API\";\nimport {GlobalQuizStyle,Wrapper} from \"./App.styles\";\n\nimport QuestionCard from \"./components/QuestionCard\";\nexport type AnswerObject={\n  question:string,\n  answer:string;\n  correct:boolean;\n  correctAnswer:string;\n}\n\n\nconst TOTAL_QUESTIONS=10;\n\nconst App = () => {\nconst [loading,setLoading]=useState(false);\nconst [questions,setQuestions]=useState<QuestionState[]>([]);// array of QuestionState\nconst [questionNumber,setQuestionNumber]=useState(0);\nconst [userAnswers,setUserAnswers]=useState<AnswerObject[]>([]);\nconst [score,setScore]=useState(0);\nconst [gameOver,setGameOver]=useState(true);\nconst [error,setError]=useState(false);\n\nconsole.log(questions);\n\n  const startTrivia = async () => {\n\n    setLoading(true);\n    setGameOver(false);\n    try {\n      const newQuestions =await fetchQuizQuestions(TOTAL_QUESTIONS,Difficulty.EASY);\n\n      setQuestions(newQuestions);\n      setScore(0);\n      setUserAnswers([]);\n      setQuestionNumber(0);\n      setLoading(false);\n\n\n    } catch (error) {\n      console.error(error);\n      setError(true);\n      \n    }\n\n   \n\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\nif(!gameOver){\n  const answer=e.currentTarget.value;\n  //check answer \n  const correct=questions[questionNumber].correct_answer===answer;\n  if(correct) setScore(prev =>prev+1);//if correct add to score\n\n  const answerObject={\nquestion:questions[questionNumber].question,\nanswer,//same as answer: answer(ES6 syntax)\ncorrect,\ncorrectAnswer:questions[questionNumber].correct_answer\n\n  };\n\n  setUserAnswers(prev=>[...prev,answerObject]);\n\n}\n  };\n\n  const nextQuestion = () => {\nconst nextQuestion =questionNumber+1;\n\nif(nextQuestion === TOTAL_QUESTIONS){\n//if we are on the last question\nsetGameOver(true);\n\n}else{\n  setQuestionNumber(nextQuestion);\n}\n\n\n\n  };\n\n  return (\n    <>\n    <GlobalQuizStyle/>\n    \n    <Wrapper>\n      \n      <div className=\"title\">quiz</div>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? ( <button className=\"start\" onClick={startTrivia}>\n        start\n      </button>):(\"\") }\n     {!gameOver ? (<p className=\"score\">score: {score}</p>):(null)}\n     {(loading && !error) && (<div className=\"loader\"></div>)}{/** short circuit */}\n\n     \n     \n\n      {(!loading && !gameOver) && (\n <QuestionCard \n      \n questionNum={questionNumber +1}\n totalQuestions={TOTAL_QUESTIONS}\n question={questions[questionNumber].question}\n answers={questions[questionNumber].answers}\n userAnswer={userAnswers ? userAnswers[questionNumber]:undefined}\n callback={checkAnswer}\n />\n      )}\n     {error ? (<div className=\"error-div\">Something went wrong</div>):null}\n{(!gameOver && !loading && userAnswers.length === questionNumber +1 && questionNumber !== TOTAL_QUESTIONS-1)? (\n <button className=\"next\" onClick={nextQuestion}>\n Next\n</button>\n): null}\n\n    \n         \n      \n    </Wrapper>\n    </>\n  );\n};\n\nexport default App;\n// npm i styled-components @types/styled-components npx i styled-compnents @types/styled-components\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}